- var theme_config = { valine: theme.valine, gitment: theme.gitment, gitalk: theme.gitalk, duoshuo: theme.duoshuo, disqus: theme.disqus, gentie: theme.gentie, youyan: theme.youyan };
script Anatolo.comment.setConfig(!{ JSON.stringify(theme_config) })

mixin require_comment_scripts
  if theme.valine
    if theme.valine.enable == true
      script(src="//cdn1.lncld.net/static/js/3.0.4/av-min.js")
      script(src="//cdn.jsdelivr.net/gh/xcss/valine@latest/dist/Valine.min.js")

  if theme.gitment
    if theme.gitment.enable == true
      link(rel="stylesheet", href="https://imsun.github.io/gitment/style/default.css")
      script(src="https://imsun.github.io/gitment/dist/gitment.browser.js")

  if theme.gitalk
    if theme.gitalk.enable == true
      link(rel="stylesheet", href=url_for("css/comments/gittalk.css"))
      script(src="https://unpkg.com/gitalk/dist/gitalk.min.js")

mixin make_comments
  if (theme.always_enable_comments && page.comments != false) || page.comments
    if theme.duoshuo
      a#comments
      .ds-thread(data-thread-key=page.path, data-title=page.title, data-url=page.permalink, data-author-key="1")
      script.
        var duoshuoQuery = { short_name: "#{theme.duoshuo}" };
        function loadComment() {
          var ds = document.createElement("script");
          ds.type = "text/javascript";
          ds.async = true;
          ds.src = (document.location.protocol == "https:" ? "https:" : "http:") + "//static.duoshuo.com/embed.js";
          ds.charset = "UTF-8";
          (document.getElementsByTagName("head")[0] || document.getElementsByTagName("body")[0]).appendChild(ds);
        }
        loadComment();

    if theme.disqus
      a#comments
      #disqus_thread
      script.
        var disqus_shortname = "#{theme.disqus}";
        var disqus_identifier = "#{page.path}";
        var disqus_title = "#{page.title}";
        var disqus_url = "#{config.url}/#{page.path}";
        (function () {
          var dsq = document.createElement("script");
          dsq.type = "text/javascript";
          dsq.async = true;
          dsq.src = "//" + disqus_shortname + ".disqus.com/embed.js";
          (document.getElementsByTagName("head")[0] || document.getElementsByTagName("body")[0]).appendChild(dsq);
        })();
      script#dsq-count-scr(src="//#{theme.disqus}.disqus.com/count.js", async)

    if theme.gentie
      a#comments
      #cloud-tie-wrapper.cloud-tie-wrapper
      script(src="https://img1.cache.netease.com/f2e/tie/yun/sdk/loader.js")
      script.
        function loadComment() {
          var cloudTieConfig = { url: document.location.href, sourceId: "#{page.path}", productKey: "#{theme.gentie}", target: "cloud-tie-wrapper" };
          var yunManualLoad = true;
          Tie.loader("aHR0cHM6Ly9hcGkuZ2VudGllLjE2My5jb20vcGMvbGl2ZXNjcmlwdC5odG1s", true);
        }
        loadComment();

    if theme.youyan
      a#comments
      #youyan_thread.post
      script.
        function loadComment() {
          var YYDiv = document.createElement("div");
          YYDiv.id = "uyan_frame";
          document.getElementById("youyan_thread").appendChild(YYDiv);

          var YYScript = document.createElement("script");
          YYScript.type = "text/javascript";
          YYScript.async = true;
          YYScript.src = (document.location.protocol == "https:" ? "https:" : "http:") + "//v2.uyan.cc/code/uyan.js?uid=" + "#{theme.youyan}";
          YYScript.charset = "UTF-8";
          document.getElementById("youyan_thread").appendChild(YYScript);
        }
        loadComment();

    if theme.valine
      if theme.valine.enable == true
        a#comments
        #vcomments(style="margin: 0 30px")

    if theme.gitment
      if theme.gitment.enable == true
        a#comments
        #gitment_container(style="padding: 10px")

    if theme.gitalk
      if theme.gitalk.enable == true
        a#comments
        #gitalk_container(style="padding: 10px")

    if theme.utrc
      if theme.utrc.enable == true
        - var ur_branch = "master"
        - var ur_issue_term = "pathname"
        - var ur_label = ""
        - var ur_theme = "github-light"
        - var ur_autodark = true
        if theme.utrc.label
          - ur_label = theme.utrc.label
        if theme.utrc.issue_term
          - ur_issue_term = theme.utrc.issue_term
        if theme.utrc.theme
          - ur_theme = theme.utrc.theme
        if theme.utrc.autodark
          - ur_autodark = theme.utrc.autodark
        a#comments
        #utrc_container(style="padding: 10px")
          script(
            id="utrc_script"
            src="https://utteranc.es/client.js"
            repo=theme.utrc.repo 
            branch=ur_branch
            issue-term=ur_issue_term 
            label=ur_label
            theme=ur_theme
            crossorigin="anonymous"
            async
          )
            span(style="color: rgba(62, 62, 62, 1)")
              Loading comments...
        if ur_autodark 
          script.reload.
            function darkModeSync() {
              let utrcScript = document.querySelector('script#utrc_script');
              //- console.log(utrcScript);
              if (utrcScript)
                utrcScript.setAttribute('theme', 'github-' + Anatolo.darkLightGet());

              let utrcIframe = document.querySelector('.utterances-frame');
              if (utrcIframe) {
                utrcIframe.contentWindow.postMessage({
                  type: 'set-theme',
                  theme: `github-${Anatolo.darkLightGet()}`
                }, 'https://utteranc.es');
              }
              //- console.log(Anatolo.darkLightGet());
            }
            console.log('reload');
            darkModeSync();
            window.onload = () => {
              //- console.log('loaded');
              darkModeSync();
            };
            new MutationObserver(() => {
              darkModeSync();
              let el = document.getElementsByClassName('utterances-frame')[0];
              //- console.log(el);
              if (el) {
                //- console.log(el);
                //- el.addEventListener('load', darkModeSync);
                //- new MutationObserver(() => {
                //-   darkModeSync();
                //-   console.log(el);
                //- }).observe(el, { childList: true, subtree: true });
                el.contentWindow.onload = () => {
                  darkModeSync();
                };
              }
            })
              .observe(document.getElementById('utrc_container'), { childList: true, subtree: true });

